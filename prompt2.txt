Here‚Äôs a **single, simple text-only prompt** you can paste into **Cursor chat** to update your **existing project**. It tells Cursor exactly what to create/modify and includes the full landing page component code so you don‚Äôt have to paste multiple snippets.

---

**Prompt for Cursor (copy everything below):**

```
You are my senior frontend engineer. Apply these changes to my EXISTING Next.js + TypeScript + Tailwind project (do NOT scaffold a new app):

GOAL
- Add a modern landing page for ‚ÄúBeatport Curator‚Äù with:
  - Dark/Light theme toggle
  - Beige light theme
  - Parallax hero background reacting to mouse movement
  - Micro-animations on buttons/cards
  - Unified squared grid + translucent gradient in header, sections, and footer
  - ‚ÄúJoin the waiting list‚Äù email form with validation + success state

ASSUMPTIONS
- Using Next.js App Router (src/app). If the project uses Pages Router, adapt paths accordingly.
- Tailwind is already configured.

TASKS (do these exactly in order)

1) GLOBAL CSS
- Open `src/app/globals.css`. Keep existing content and APPEND:
```

html { scroll-behavior: smooth; }
\::selection { background: rgba(16,185,129,.35); color: #000; }

```

2) PAGE WIRING
- Create (or update) `src/app/page.tsx` to import and render a `LandingPage` component:
```

import LandingPage from '@/components/LandingPage';
export default function Page() { return <LandingPage />; }

````

3) COMPONENT: LandingPage
- Create a new file `src/components/LandingPage.tsx` with the EXACT code below (overwrite if it exists):

```tsx
import React from 'react'

// Landing page with Dark/Light toggle, parallax hero, micro-animations,
// enhanced light theme (beige), and unified grid/gradient backdrops.
// TailwindCSS utilities assumed available in preview context.

export default function LandingPage(){
  const [theme, setTheme] = React.useState<'dark'|'light'>('dark')
  const [email, setEmail] = React.useState('')
  the const [submitted, setSubmitted] = React.useState(false)
  const [error, setError] = React.useState<string|null>(null)
  const [offset, setOffset] = React.useState({x:0, y:0}) // parallax offset (-0.5..0.5)

  // ---- Lightweight self-tests (dev only) -----------------------------------
  React.useEffect(() => {
    try {
      const results: {name:string; pass:boolean}[] = []
      const assert = (name:string, cond:boolean) => results.push({name, pass: !!cond})
      // 1) Component existence
      assert('HeaderBackdrop is defined', typeof HeaderBackdrop === 'function')
      assert('SectionBackdrop is defined', typeof SectionBackdrop === 'function')
      assert('ClubBackdrop is defined', typeof ClubBackdrop === 'function')
      // 2) Email regex sanity
      const re = /^[^\s@]+@[^\s@]+\.[^\s@]+$/
      const valid = ['a@b.co','dj.name+test@club.io']
      const invalid = ['a@b','noatsign.com','x@y','']
      assert('valid emails pass', valid.every(e => re.test(e)))
      assert('invalid emails fail', invalid.every(e => !re.test(e)))
      // 3) Theme toggle value domain
      assert("theme in {'dark','light'}", theme === 'dark' || theme === 'light')
      // Print table if available (ignored in prod)
      // eslint-disable-next-line no-console
      if (typeof console !== 'undefined' && typeof console.table === 'function') console.table(results)
    } catch { /* ignore in production preview */ }
  }, [theme])
  // -------------------------------------------------------------------------

  function submit(e: React.FormEvent){
    e.preventDefault()
    setError(null)
    const ok = /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(email)
    if(!ok){ setError('Please enter a valid email.'); return; }
    setSubmitted(true)
  }

  function onHeroMove(e: React.MouseEvent){
    const rect = (e.currentTarget as HTMLElement).getBoundingClientRect()
    const x = (e.clientX - rect.left) / rect.width - 0.5
    const y = (e.clientY - rect.top) / rect.height - 0.5
    setOffset({x, y})
  }

  return (
    <div className={theme==='dark' ? 'min-h-screen bg-[#0a0a0d] text-white' : 'min-h-screen bg-[#f0e7d8] text-[#1a1a17]'}>
      {/* Theme toggle + nav (sticky) */}
      <header className={(theme==='dark'?'bg-white/5 text-white':'bg-[#1a1a17]/5 text-[#1a1a17]')+ ' sticky top-0 z-50 backdrop-blur supports-[backdrop-filter]:bg-opacity-60 relative'}>
        <HeaderBackdrop theme={theme} />
        <div className="mx-auto max-w-6xl px-4 py-3 flex items-center justify-between relative z-10">
          <div className="flex items-center gap-2">
            <div className={(theme==='dark'?'from-fuchsia-500/30 to-emerald-500/30 border-fuchsia-400/40':'from-amber-500/30 to-rose-500/30 border-amber-400/40')+" h-8 w-8 rounded-xl bg-gradient-to-br grid place-items-center text-[11px] border shadow-sm"}>BC</div>
            <span className="font-semibold">Beatport Curator</span>
          </div>
          <nav className="hidden md:flex items-center gap-6 text-sm opacity-90">
            <a href="#how" className="transition hover:opacity-100 hover:-translate-y-0.5 inline-flex items-center gap-1">How it works<span className="opacity-50">‚Üó</span></a>
            <a href="#features" className="transition hover:opacity-100 hover:-translate-y-0.5 inline-flex items-center gap-1">Features<span className="opacity-50">‚Üó</span></a>
            <a href="#waitlist" className="transition hover:opacity-100 hover:-translate-y-0.5 inline-flex items-center gap-1">Waiting list<span className="opacity-50">‚Üó</span></a>
          </nav>
          <div className="flex items-center gap-2">
            <ThemeToggle theme={theme} setTheme={setTheme} />
            <a href="#waitlist" className={(theme==='dark'?'bg-emerald-500/20 hover:bg-emerald-500/30 border-emerald-400/40 text-emerald-200':'bg-emerald-600/10 hover:bg-emerald-600/20 border-emerald-600/30 text-emerald-700')+" hidden md:inline-flex items-center gap-2 px-3 py-1.5 rounded-lg border text-sm transition shadow hover:shadow-md"}>Join Beta</a>
          </div>
        </div>
      </header>

      {/* Hero with parallax */}
      <section className="relative overflow-hidden" onMouseMove={onHeroMove}>
        <ClubBackdrop theme={theme} offset={offset} />
        <div className="relative mx-auto max-w-6xl px-4 py-20 md:py-28">
          <div className="max-w-2xl">
            <h1 className="text-3xl md:text-5xl font-bold leading-tight tracking-tight">
              Stop wasting time. <span className="whitespace-nowrap">Find the perfect tracks.</span>
            </h1>
            <p className={(theme==='dark'? 'text-white/70':'text-[#1a1a17]/70')+" mt-4 md:text-lg"}>
              AI-powered curation for aspiring and veteran DJs. Tell us your vibe, and we‚Äôll surface tracks that fit your style ‚Äî fast.
            </p>
            <div className="mt-6 flex flex-col sm:flex-row gap-3">
              <a href="#waitlist" className={(theme==='dark'?'bg-emerald-500 text-black':'bg-emerald-600 text-white')+" px-5 py-3 rounded-xl text-sm font-semibold transition-transform hover:-translate-y-0.5 hover:shadow-lg active:scale-[0.98]"}>Join the waiting list</a>
              <a href="#demo" className={(theme==='dark'?'bg-white/10 text-white hover:bg-white/20':'bg-[#1a1a17]/5 text-[#1a1a17] hover:bg-[#1a1a17]/10')+" px-5 py-3 rounded-xl text-sm font-semibold transition hover:shadow"}>Watch demo</a>
            </div>
            <ul className={(theme==='dark'? 'text-white/70':'text-[#1a1a17]/70')+" mt-6 text-sm grid gap-1.5"}>
              <li className="transition hover:translate-x-0.5">‚Ä¢ Cut through thousands of tracks with AI that understands your play style.</li>
              <li className="transition hover:translate-x-0.5">‚Ä¢ Get recommendations that match your BPM, key, genre and vibe.</li>
              <li className="transition hover:translate-x-0.5">‚Ä¢ Auto-sync to Beatport DJ ‚Äî exporting is just the fallback.</li>
            </ul>
          </div>
        </div>
      </section>

      {/* Pain ‚Üí Solution */}
      <section className="relative" id="pain">
        <div className="mx-auto max-w-6xl px-4 py-14 grid md:grid-cols-2 gap-8">
          <div>
            <h2 className="text-2xl md:text-3xl font-semibold">Too many tracks. Too little time.</h2>
            <p className={(theme==='dark'? 'text-white/70':'text-[#1a1a17]/70')+" mt-3"}>
              Sifting through endless lists wastes creative energy. Most tracks aren‚Äôt right for your style ‚Äî or your next set.
            </p>
            <ul className={(theme==='dark'? 'text-white/80':'text-[#1a1a17]/80')+" mt-6 grid gap-3 text-sm"}>
              <li className="flex items-start gap-2 hover:translate-x-0.5 transition"><span className="mt-1">‚è±</span><span>Hours lost scrolling and sampling.</span></li>
              <li className="flex items-start gap-2 hover:translate-x-0.5 transition"><span className="mt-1">üîé</span><span>Good music buried under noise.</span></li>
              <li className="flex items-start gap-2 hover:translate-x-0.5 transition"><span className="mt-1">üéõÔ∏è</span><span>Hard to explore new directions that still fit your personality.</span></li>
            </ul>
          </div>
          <div>
            <div className={(theme==='dark'?'bg-white/5 border-white/10':'bg-[#1a1a17]/5 border-[#1a1a17]/10')+" rounded-2xl p-4 border transition hover:shadow-md"}>
              <h3 className="font-semibold">Beatport Curator solves this.</h3>
              <p className={(theme==='dark'? 'text-white/70':'text-[#1a1a17]/70')+" mt-2 text-sm"}>
                Our AI learns your DJ profile and vibe instructions, filters out the noise, and puts the right tracks front and center.
              </p>
              <div className="mt-4 grid grid-cols-2 gap-3 text-sm">
                <DataTile theme={theme} label="Time saved / wk" value="5‚Äì10h"/>
                <DataTile theme={theme} label="Irrelevant tracks" value="‚àí80%"/>
                <DataTile theme={theme} label="Fresh finds" value="+3√ó"/>
                <DataTile theme={theme} label="Set readiness" value="Faster"/>
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* How it works */}
      <section id="how" className={(theme==='dark'?'bg-white/5':'bg-[#1a1a17]/5')+" border-y border-white/10 md:border-[#1a1a17]/10 relative overflow-hidden"}>
        <SectionBackdrop theme={theme} />
        <div className="relative mx-auto max-w-6xl px-4 py-14 grid md:grid-cols-3 gap-8">
          <StepCard theme={theme} n={1} title="Connect" text="Secure OAuth to Beatport. Sync your library & playlists."/>
          <StepCard theme={theme} n={2} title="Tell your vibe" text="Genres, BPM range, keys, artists you like ‚Äî or just type it in natural language."/>
          <StepCard theme={theme} n={3} title="Get the good stuff" text="Curated tracks matched to your style. Add to Collections and auto-sync to Beatport DJ."/>
        </div>
      </section>

      {/* Features grid */}
      <section id="features" className="relative overflow-hidden">
        <SectionBackdrop theme={theme} subtle />
        <div className="relative mx-auto max-w-6xl px-4 py-14">
          <h2 className="text-2xl md:text-3xl font-semibold">Everything you need to curate faster</h2>
          <div className="mt-8 grid sm:grid-cols-2 lg:grid-cols-3 gap-4">
            <FeatureCard theme={theme} title="AI Recommendations" text="Learns your style from likes, skips, collections and vibe prompts."/>
            <FeatureCard theme={theme} title="Natural Language Search" text="Ask for ‚Äòpeak-time melodic techno 126‚Äì128 BPM, 8A‚Äô and get spot-on results."/>
            <FeatureCard theme={theme} title="Auto Sync to Beatport DJ" text="Primary workflow: one click, your collection becomes a Beatport DJ playlist."/>
            <FeatureCard theme={theme} title="Compact Discover Table" text="# ¬∑ ‚ñ∂ ¬∑ Title ¬∑ Artists ¬∑ Genre ¬∑ BPM ¬∑ Key ¬∑ Actions. Sticky top menus & filters."/>
            <FeatureCard theme={theme} title="Offline & Queue" text="Work on the go. Changes sync when you‚Äôre back online."/>
            <FeatureCard theme={theme} title="Export Fallbacks" text="CSV, M3U, JSON when you need manual workflows."/>
          </div>
        </div>
      </section>

      {/* Testimonials / Social Proof */}
      <section id="proof" className={(theme==='dark'?'bg-white/5':'bg-[#1a1a17]/5')+" border-y border-white/10 md:border-[#1a1a17]/10 relative overflow-hidden"}>
        <SectionBackdrop theme={theme} subtle />
        <div className="relative mx-auto max-w-6xl px-4 py-14 grid md:grid-cols-3 gap-6">
          <Quote theme={theme} who="Resident DJ" text="I save hours every week and still push my sound in the direction I want."/>
          <Quote theme={theme} who="Aspiring DJ" text="It finally surfaces tracks that actually fit my style, not just what‚Äôs trending."/>
          <Quote theme={theme} who="Club Booker" text="Consistent quality selections, faster ‚Äî this shortens prep for every set."/>
        </div>
      </section>

      {/* Waiting List */}
      <section id="waitlist" className="relative overflow-hidden">
        <SectionBackdrop theme={theme} subtle />
        <div className="relative mx-auto max-w-3xl px-4 py-16 text-center">
          <h2 className="text-2xl md:text-3xl font-semibold">Join the waiting list</h2>
          <p className={(theme==='dark'? 'text-white/70':'text-[#1a1a17]/70')+" mt-2"}>Limited beta. Be the first to get access.</p>
          <form onSubmit={submit} className="mt-6 flex flex-col sm:flex-row gap-3 justify-center">
            <input
              type="email"
              value={email}
              onChange={e=>setEmail(e.target.value)}
              placeholder="you@club.email"
              className={(theme==='dark'?'bg-white/10 placeholder-white/50 text-white border-white/20':'bg-[#1a1a17]/5 placeholder-[#1a1a17]/50 text-[#1a1a17] border-[#1a1a17]/10')+" w-full sm:w-96 px-4 py-3 rounded-xl border outline-none focus:ring-2 focus:ring-emerald-500 transition"}
              required
            />
            <button type="submit" className={(theme==='dark'?'bg-emerald-500 text-black':'bg-emerald-600 text-white')+" px-5 py-3 rounded-xl text-sm font-semibold transition-transform hover:-translate-y-0.5 hover:shadow-lg active:scale-[0.98]"}>Notify me</button>
          </form>
          {error && <p className="mt-2 text-sm text-rose-400">{error}</p>}
          {submitted && <div className={(theme==='dark'?'bg-emerald-500/15 text-emerald-200 border-emerald-400/30':'bg-emerald-600/10 text-emerald-800 border-emerald-600/30')+" mt-4 inline-flex items-center gap-2 px-3 py-2 rounded-lg border text-sm"}>‚úÖ Thanks! We‚Äôll be in touch soon.</div>}
        </div>
      </section>

      {/* Footer with the same grid + gradient */}
      <footer className={(theme==='dark'?'bg-white/5':'bg-[#1a1a17]/5')+" border-t border-white/10 md:border-[#1a1a17]/10 relative overflow-hidden"}>
        <HeaderBackdrop theme={theme} />
        <div className="relative mx-auto max-w-6xl px-4 py-8 flex flex-col md:flex-row items-center justify-between gap-4 z-10">
          <div className="text-sm opacity-70">¬© {new Date().getFullYear()} Beatport Curator</div>
          <div className="flex items-center gap-4 text-sm opacity-80">
            <a href="#" className="hover:opacity-100 transition">About</a>
            <a href="#" className="hover:opacity-100 transition">Privacy</a>
            <a href="#" className="hover:opacity-100 transition">Terms</a>
          </div>
        </div>
      </footer>
    </div>
  )
}

function ThemeToggle({theme, setTheme}:{theme:'dark'|'light'; setTheme:(t:'dark'|'light')=>void}){
  const isDark = theme==='dark'
  return (
    <button onClick={()=>setTheme(isDark?'light':'dark')} aria-label="Toggle theme" className={(isDark?'bg-white/10 hover:bg-white/20':'bg-[#1a1a17]/10 hover:bg-[#1a1a17]/20')+" px-3 py-1.5 rounded-lg text-sm transition"}>
      {isDark? 'Dark ‚Ä¢ On' : 'Light ‚Ä¢ On'}
    </button>
  )
}

function HeaderBackdrop({theme}:{theme:'dark'|'light'}){
  return (
    <div className="absolute inset-0 pointer-events-none overflow-hidden">
      {/* subtle grid */}
      <div className={(theme==='dark'
        ? 'bg-[linear-gradient(transparent_95%,rgba(255,255,255,0.08)_95%),linear-gradient(90deg,transparent_95%,rgba(255,255,255,0.08)_95%)]'
        : 'bg-[linear-gradient(transparent_95%,rgba(26,26,23,0.08)_95%),linear-gradient(90deg,transparent_95%,rgba(26,26,23,0.08)_95%)]')+" absolute inset-0 bg-[size:20px_20px] opacity-40"}></div>
      {/* gentle color wash */}
      <div className={(theme==='dark'
        ? 'bg-[radial-gradient(circle_at_20%_10%,rgba(157,78,221,0.25),transparent_35%),radial-gradient(circle_at_80%_20%,rgba(16,185,129,0.25),transparent_35%),radial-gradient(circle_at_60%_80%,rgba(56,189,248,0.2),transparent_35%)]'
        : 'bg-[radial-gradient(circle_at_20%_10%,rgba(255,196,124,0.45),transparent_35%),radial-gradient(circle_at_80%_20%,rgba(255,137,137,0.42),transparent_35%),radial-gradient(circle_at_60%_80%,rgba(176,220,255,0.38),transparent_35%)]')+" absolute -inset-[20%] blur-3xl opacity-70"}></div>
    </div>
  )
}

function ClubBackdrop({theme, offset}:{theme:'dark'|'light'; offset:{x:number,y:number}}){
  const t1 = { transform: `translate3d(${offset.x*30}px, ${offset.y*30}px, 0)` }
  const t2 = { transform: `translate3d(${offset.x*-20}px, ${offset.y*-20}px, 0)` }
  return (
    <div aria-hidden className="absolute inset-0 overflow-hidden">
      {/* gradient wash (stronger in light theme) */}
      <div style={t1} className={"absolute -inset-[20%] blur-3xl "+(theme==='dark'
        ? 'opacity-60 bg-[radial-gradient(circle_at_20%_10%,rgba(157,78,221,0.35),transparent_35%),radial-gradient(circle_at_80%_20%,rgba(16,185,129,0.35),transparent_35%),radial-gradient(circle_at_60%_80%,rgba(56,189,248,0.25),transparent_35%)]'
        : 'opacity-80 bg-[radial-gradient(circle_at_20%_10%,rgba(255,196,124,0.55),transparent_35%),radial-gradient(circle_at_80%_20%,rgba(255,137,137,0.5),transparent_35%),radial-gradient(circle_at_60%_80%,rgba(176,220,255,0.45),transparent_35%)]')}></div>
      {/* subtle grid with parallax */}
      <div style={t2} className={(theme==='dark'
        ? 'bg-[linear-gradient(transparent_95%,rgba(255,255,255,0.08)_95%),linear-gradient(90deg,transparent_95%,rgba(255,255,255,0.08)_95%)]'
        : 'bg-[linear-gradient(transparent_95%,rgba(26,26,23,0.07)_95%),linear-gradient(90deg,transparent_95%,rgba(26,26,23,0.07)_95%)]')+" absolute inset-0 bg-[size:20px_20px] opacity-40"}></div>
    </div>
  )
}

function SectionBackdrop({theme, subtle}:{theme:'dark'|'light'; subtle?:boolean}){
  return (
    <div aria-hidden className="absolute inset-0">
      <div className={(theme==='dark'
        ? `bg-[linear-gradient(transparent_95%,rgba(255,255,255,0.08)_95%),linear-gradient(90deg,transparent_95%,rgba(255,255,255,0.08)_95%)]`
        : `bg-[linear-gradient(transparent_95%,rgba(26,26,23,0.07)_95%),linear-gradient(90deg,transparent_95%,rgba(26,26,23,0.07)_95%)]`)+" absolute inset-0 bg-[size:20px_20px] "+(subtle?'opacity-25':'opacity-40')}></div>
      <div className={(theme==='dark'
        ? 'bg-[radial-gradient(circle_at_20%_10%,rgba(157,78,221,0.22),transparent_35%),radial-gradient(circle_at_80%_20%,rgba(16,185,129,0.22),transparent_35%),radial-gradient(circle_at_60%_80%,rgba(56,189,248,0.18),transparent_35%)]'
        : 'bg-[radial-gradient(circle_at_20%_10%,rgba(255,196,124,0.45),transparent_35%),radial-gradient(circle_at_80%_20%,rgba(255,137,137,0.42),transparent_35%),radial-gradient(circle_at_60%_80%,rgba(176,220,255,0.38),transparent_35%)]')+" absolute -inset-[20%] blur-3xl "+(subtle?'opacity-50':'opacity-70')}></div>
    </div>
  )
}

function DataTile({theme,label,value}:{theme:'dark'|'light'; label:string; value:string}){
  return (
    <div className={(theme==='dark'?'bg-white/5 border-white/10':'bg-[#1a1a17]/5 border-[#1a1a17]/10')+" rounded-xl p-3 border transition hover:shadow"}>
      <div className="text-xs opacity-70">{label}</div>
      <div className="mt-1 text-lg font-semibold">{value}</div>
    </div>
  )
}

function StepCard({theme,n,title,text}:{theme:'dark'|'light'; n:number; title:string; text:string}){
  return (
    <div className={(theme==='dark'?'bg-white/5 border-white/10':'bg-[#1a1a17]/5 border-[#1a1a17]/10')+" rounded-2xl p-4 border transition hover:-translate-y-0.5 hover:shadow-md"}>
      <div className={(theme==='dark'?'text-emerald-300':'text-emerald-700')+" text-sm font-semibold"}>Step {n}</div>
      <div className="mt-1 text-lg font-semibold">{title}</div>
      <p className={(theme==='dark'? 'text-white/70':'text-[#1a1a17]/70')+" mt-2 text-sm"}>{text}</p>
    </div>
  )
}

function FeatureCard({theme,title,text}:{theme:'dark'|'light'; title:string; text:string}){
  return (
    <div className={(theme==='dark'?'bg-white/5 border-white/10':'bg-[#1a1a17]/5 border-[#1a1a17]/10')+" rounded-2xl p-4 border transition hover:-translate-y-0.5 hover:shadow-md"}>
      <div className="text-base font-semibold">{title}</div>
      <p className={(theme==='dark'? 'text-white/70':'text-[#1a1a17]/70')+" mt-2 text-sm"}>{text}</p>
    </div>
  )
}

function Quote({theme, who, text}:{theme:'dark'|'light'; who:string; text:string}){
  return (
    <figure className={(theme==='dark'?'bg-white/5 border-white/10':'bg-[#1a1a17]/5 border-[#1a1a17]/10')+" rounded-2xl p-4 border transition hover:-translate-y-0.5 hover:shadow"}>
      <blockquote className={(theme==='dark'? 'text-white':'text-[#1a1a17]')+" text-sm"}>‚Äú{text}‚Äù</blockquote>
      <figcaption className={(theme==='dark'?'text-white/70':'text-[#1a1a17]/70')+" mt-2 text-xs"}>‚Äî {who}</figcaption>
    </figure>
  )
}
````

4. VERIFY

* Run dev server and confirm:

  * Theme toggle works.
  * Light theme uses beige background (#f0e7d8) with stronger translucent gradients.
  * Hero background reacts to mouse movement (parallax).
  * Header, sections, and footer share the squared grid + color wash.
  * ‚ÄúNotify me‚Äù validates email and shows success state.

5. DO NOT create a new project; only modify existing files as instructed above.

```

---